
@model BrickPile.UI.Web.ViewModels.IndexViewModel
@using BrickPile.UI.Web.Mvc.Html
@using BrickPile.UI.Common
@{
    ViewBag.Title = "Let's pile some bricks eh?";
    Layout = "~/Areas/BrickPile.UI/Views/Shared/_Layout.cshtml";
}

@section Navigation {
    <ul>
        <!--li>@Html.ActionLink("Dashboard", "index", "dashboard", null, new { @class = "dashboard" })</li-->
        <li>@Html.ActionLink("Content", "index", "content", null, new { @class = "content selected" })</li>
        <li>@Html.ActionLink("Users", "manageusers", "account", null, new { @class = "users" })</li>
    </ul>
}

<h1>Welcome @HttpContext.Current.User.Identity.Name! Let's pile some bricks eh?</h1>

@if (Model.CurrentModel != null) {
    <div id="pages">
        @if (Model.ParentModel != null) {
            <span class="button back">
                 @Html.ActionLink(Model.ParentModel)
            </span>
        }
        @if (HttpContext.Current.Request.Path.Contains("showdeleted")) {
            <span class="button showdeleted">
                <a href="@Url.Action("index", "content", new { model = Model.CurrentModel })" class="selected"><img src="@Url.Content("~/areas/brickpile.ui/images/deleted.png")" alt="Show deleted pages" /></a>
            </span>
        } else {
            <span class="button showdeleted">
                <a href="@Url.Action("showdeleted", "content", new { model = Model.CurrentModel })"><img src="@Url.Content("~/areas/brickpile.ui/images/deleted.png")" alt="Show deleted pages" /></a>
            </span>
        }
        <span class="button add">
            <a href="@Url.Action("add", "content", new { model = Model.CurrentModel })"><img src="@Url.Content("~/areas/brickpile.ui/images/add.png")" alt="Add page" /></a>
        </span>
        <table>
            <caption>@Model.CurrentModel.Metadata.Name</caption>
            <thead>
                <tr>
                    <th><span>&nbsp;</span></th>
                    <th><span>Page name</span></th>                
                    <th><span>Slug</span></th>
                    <th><span>Published</span></th>
                    <th><span>Changed</span></th>
                    <th><span>&nbsp;</span></th>
                </tr>
            </thead>
            <tbody>
                
                @if (Model.ParentModel == null) {
                    <tr class="ui-state-disabled">
                        <td><span>&nbsp;</span></td>
                        <td class="name"><span>@Model.RootModel.Metadata.Name</span></td>
                        <td class="slug"><span>/@Model.RootModel.Metadata.Slug</span></td>
                        <td class="publish"><span>@Html.CheckBox(Model.RootModel.Id.Replace("/", "_"), Model.RootModel.Metadata.IsPublished, new { @class = "publish" })</span></td>
                        <td class="changed"><span>@Html.Raw(Model.RootModel.Metadata.Changed.HasValue ? @Model.RootModel.Metadata.Changed.FormatDate() + " <strong>by</strong> " + Model.RootModel.Metadata.ChangedBy : "")</span></td>
                        <td class="actions">
                            <span>
                                <span>
                                    <a href="@Url.Action("edit", new { model = Model.RootModel })"><img src="/areas/brickpile.ui/images/edit.png" alt="Edit page" /></a>
                                    <a href="@Url.Action("delete", new { model = Model.RootModel })" class="delete"><img src="/areas/brickpile.ui/images/delete.png" alt="Delete page" /></a>
                                </span>
                            </span>
                        </td>
                    </tr>                    
                }
                
                @if (Model.Children.Count > 0) {

                    foreach (var item in Model.Children) {

                        if (item.Metadata.IsDeleted) {
                            
                            <tr id="@item.Id.Replace('/', '_')" class="@(item.Metadata.IsDeleted ? "deleted" : "")">
                                <td><span><img src="/areas/brickpile.ui/images/sort.png" alt="Sort" /></span></td>
                                <td class="name"><span>@item.Metadata.Name</span></td>
                                <td class="slug"><span>@item.Metadata.Slug</span></td>
                                <td class="publish"><span>@Html.CheckBox(item.Id.Replace("/", "_"), item.Metadata.IsPublished, new { disabled = "disabled" })</span></td>
                                <td class="changed"><span>@Html.Raw(item.Metadata.Changed.HasValue ? item.Metadata.Changed.FormatDate() + " <strong>by</strong> " + item.Metadata.ChangedBy : "")</span></td>
                                <td class="actions">
                                    <span>
                                        <span>
                                            <a href="@Url.Action("undelete", new { model = item })" class="undo"><img src="/areas/brickpile.ui/images/undo.png" alt="Undo" /></a>
                                            <a href="@Url.Action("permanentdelete", new { model = item })" class="perma-delete"><img src="/areas/brickpile.ui/images/perm-delete.png" alt="Delete permanently" /></a>
                                        </span>
                                    </span>
                                </td>
                            </tr>
                    
                        } else {                        
                            <tr id="@item.Id.Replace('/', '_')"class="@(item.Metadata.IsDeleted ? "deleted" : "")">
                                <td class="sort"><span><img src="/areas/brickpile.ui/images/sort.png" alt="Sort" /></span></td>
                                <td class="name"><span>@item.Metadata.Name</span></td>
                                <td class="slug"><span>@item.Metadata.Slug</span></td>
                                <td class="publish"><span>@Html.CheckBox(item.Id.Replace("/", "_"), item.Metadata.IsPublished, new { @class = "publish" })</span></td>
                                <td class="changed"><span>@Html.Raw(item.Metadata.Changed.HasValue ? item.Metadata.Changed.FormatDate() + " <strong>by</strong> " + item.Metadata.ChangedBy : "")</span></td>
                                <td class="actions">
                                    <span>
                                        <span>
                                            <a href="@Url.Action("edit", new { model = item })"><img src="/areas/brickpile.ui/images/edit.png" alt="Edit page" /></a>
                                            @if (item.Metadata.IsDeleted) {
                                                <a href="@Url.Action("undelete", new { model = item })" class="undelete"><img src="/areas/brickpile.ui/images/delete.png" alt="Undelete page" /></a>
                                            } else {
                                                <a href="@Url.Action("delete", new { model = item })" class="delete"><img src="/areas/brickpile.ui/images/delete.png" alt="Delete page" /></a>
                                            }
                                        </span>
                                        <a href="@Url.Action("index", new { model = item })" class="button"><img src="/areas/brickpile.ui/images/next-level.png" alt="Edit children" /></a>
                                    </span>
                                </td>                            
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
}